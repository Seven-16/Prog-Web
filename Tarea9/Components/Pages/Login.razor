@page "/"
@page "/login"
@inject Servicio servicio
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Login</PageTitle>

<h3>Iniciar sesión</h3>

<EditForm Model="@usuario" OnValidSubmit="LoginUsuario">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="usuario">Usuario:</label>
        <InputText id="usuario" @bind-Value="usuario.Usuario" class="form-control custom-input" />
        <ValidationMessage For="@(() => usuario.Usuario)"/>
    </div>


    <div class="form-group">
        <label for="clave">Clave:</label>
        <InputText id="clave" @bind-Value="usuario.Clave" class="form-control custom-input" />
        <ValidationMessage For="@(() => usuario.Clave)"/>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3">
            @errorMessage
        </div>
    }

    <button type="submit" class="btn btn-primary">Ingresar</button>


</EditForm>

<p>No tienes cuenta? <a href="/registro">Crea una!</a></p>

@code {
    private Menol usuario = new Menol();
    private string errorMessage = string.Empty;

    private void LoginUsuario()
    {
        errorMessage = string.Empty;
        var user = servicio.ObtenerUsuario(usuario.Usuario!, usuario.Clave!);
        if (user != null)
        {
            NavigationManager.NavigateTo("/dashboard");
        }
        else
        {
            // Mostrar mensaje de error
            errorMessage = "Usuario o Contraseña incorrecta!!";
            StateHasChanged();
            return;
        }
    }
}

